import requests
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()
TRELLO_KEY = os.getenv('TRELLO_KEY')
TRELLO_TOKEN = os.getenv('TRELLO_TOKEN')
TRELLO_FEATURE_REQUEST_LIST = os.getenv('TRELLO_FEATURE_REQUEST_LIST')

def create_trello_card(list_id, name, desc, key=TRELLO_KEY, token=TRELLO_TOKEN):
    url = "https://api.trello.com/1/cards"

    query = {
        'key': key,
        'token': token,
        'idList': list_id,  # The ID of the list the card should be added to.
        'name': name,       # The name of the new card.
        'desc': desc,       # The description of the new card.
    }

    response = requests.request(
        "POST",
        url,
        params=query
    )
    if response.status_code == 200:
        print("Trello card created successfully!")
    else:
        print(f"Failed to create Trello card, status code: {response.status_code}, response: {response.text}")



# replace 'your_key', 'your_token', 'list_id', 'card_name', 'card_description' with actual values
# create_trello_card('list_id', 'card_name', 'card_description', 'your_key', 'your_token')



def get_board_lists(board_id, key=TRELLO_KEY, token=TRELLO_TOKEN):
    url = f"https://api.trello.com/1/boards/{board_id}/lists"

    query = {
        'key': key,
        'token': token
    }

    response = requests.request(
        "GET",
        url,
        params=query
    )

    if response.status_code == 200:
        lists = response.json()
        for list in lists:
            print(f"List Name: {list['name']}, List ID: {list['id']}")
    else:
        print(f"Failed to get Trello lists, status code: {response.status_code}, response: {response.text}")

# replace 'your_key', 'your_token', 'board_id' with actual values
get_board_lists('board_id', 'your_key', 'your_token')

import requests

def get_boards(key=TRELLO_KEY, token=TRELLO_TOKEN):
    url = "https://api.trello.com/1/members/me/boards"

    query = {
        'key': key,
        'token': token
    }

    response = requests.request(
        "GET",
        url,
        params=query
    )

    if response.status_code == 200:
        boards = response.json()
        for board in boards:
            print(f"Board Name: {board['name']}, Board ID: {board['id']}")
    else:
        print(f"Failed to get Trello boards, status code: {response.status_code}, response: {response.text}")

# # replace 'your_key', 'your_token' with actual values
# get_boards(TRELLO_KEY, TRELLO_TOKEN)
# get_board_lists('645e851bf64c3a57e08f8027', TRELLO_KEY, TRELLO_TOKEN)

# create_trello_card(
#     list_id='645e87a92d34d7af42fbbda6', 
#     name='Autogenerated Card', 
#     desc="Feature request info!", 
#     key=TRELLO_KEY, token=TRELLO_TOKEN
# )